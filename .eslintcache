[{"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\index.js":"1","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reportWebVitals.js":"2","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\App.js":"3","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\store\\index.js":"4","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\index.js":"5","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\Test\\index.js":"6","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\index.js":"7","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\OrderPage\\index.js":"8","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\HomePage\\index.js":"9","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\OrderDetailsPage\\index.js":"10","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CartPage\\index.js":"11","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductDetailsPage\\index.js":"12","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CheckoutPage\\index.js":"13","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\index.js":"14","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\category.actions.js":"15","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\product.actions.js":"16","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\auth.actions.js":"17","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\user.actions.js":"18","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\cart.actions.js":"19","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Price.js":"20","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CheckoutPage\\AddressForm.js":"21","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\utils\\getParams.js":"22","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\category.reducers.js":"23","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\product.reducers.js":"24","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\cart.reducers.js":"25","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\user.reducers.js":"26","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\auth.reducers.js":"27","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\Layout\\index.js":"28","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js":"29","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js":"30","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Card\\index.js":"31","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\MaterialUI\\index.js":"32","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\PriceDetails\\index.js":"33","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\constants.js":"34","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CartPage\\CartItem\\index.js":"35","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\helpers\\axios.js":"36","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\urlConfig.js":"37","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\MenuHeader\\index.js":"38","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\Header\\index.js":"39","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Cart.js":"40","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js":"41"},{"size":672,"mtime":1610948670118,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":1477,"mtime":1611378882952,"results":"45","hashOfConfig":"43"},{"size":218,"mtime":1609739459692,"results":"46","hashOfConfig":"43"},{"size":199,"mtime":1611378788772,"results":"47","hashOfConfig":"43"},{"size":0,"mtime":1610886546778,"results":"48","hashOfConfig":"43"},{"size":954,"mtime":1611628883900,"results":"49","hashOfConfig":"43"},{"size":2066,"mtime":1611377941386,"results":"50","hashOfConfig":"43"},{"size":556,"mtime":1611379258424,"results":"51","hashOfConfig":"43"},{"size":3920,"mtime":1611377871373,"results":"52","hashOfConfig":"43"},{"size":3680,"mtime":1611485887819,"results":"53","hashOfConfig":"43"},{"size":5387,"mtime":1611469117645,"results":"54","hashOfConfig":"43"},{"size":10459,"mtime":1611378903137,"results":"55","hashOfConfig":"43"},{"size":511,"mtime":1611404405081,"results":"56","hashOfConfig":"43"},{"size":822,"mtime":1611253478428,"results":"57","hashOfConfig":"43"},{"size":1945,"mtime":1610812861623,"results":"58","hashOfConfig":"43"},{"size":2935,"mtime":1611409143417,"results":"59","hashOfConfig":"43"},{"size":3948,"mtime":1611377411333,"results":"60","hashOfConfig":"43"},{"size":5032,"mtime":1611513463932,"results":"61","hashOfConfig":"43"},{"size":402,"mtime":1611379088137,"results":"62","hashOfConfig":"43"},{"size":6681,"mtime":1611377758715,"results":"63","hashOfConfig":"43"},{"size":494,"mtime":1610471985531,"results":"64","hashOfConfig":"43"},{"size":2698,"mtime":1609739459574,"results":"65","hashOfConfig":"43"},{"size":1738,"mtime":1610779920381,"results":"66","hashOfConfig":"43"},{"size":1172,"mtime":1611483451471,"results":"67","hashOfConfig":"43"},{"size":2254,"mtime":1611404376012,"results":"68","hashOfConfig":"43"},{"size":1700,"mtime":1610771547911,"results":"69","hashOfConfig":"43"},{"size":294,"mtime":1609746701492,"results":"70","hashOfConfig":"43"},{"size":2020,"mtime":1611382152841,"results":"71","hashOfConfig":"43"},{"size":1552,"mtime":1610775883852,"results":"72","hashOfConfig":"43"},{"size":700,"mtime":1611379131736,"results":"73","hashOfConfig":"43"},{"size":3695,"mtime":1611382518931,"results":"74","hashOfConfig":"43"},{"size":1038,"mtime":1611514075993,"results":"75","hashOfConfig":"43"},{"size":3216,"mtime":1611378232122,"results":"76","hashOfConfig":"43"},{"size":1550,"mtime":1611485600118,"results":"77","hashOfConfig":"43"},{"size":280,"mtime":1609742970284,"results":"78","hashOfConfig":"43"},{"size":61,"mtime":1611513090483,"results":"79","hashOfConfig":"43"},{"size":1380,"mtime":1611253496999,"results":"80","hashOfConfig":"43"},{"size":8589,"mtime":1611513630592,"results":"81","hashOfConfig":"43"},{"size":704,"mtime":1611379066249,"results":"82","hashOfConfig":"43"},{"size":1476,"mtime":1611628739707,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"ce9uiw",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\index.js",[],["184","185"],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reportWebVitals.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\App.js",["186","187"],"import React, { useEffect } from 'react'\nimport './App.css';\nimport HomePage from './containers/HomePage';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProductListPage from './containers/ProductListPage';\nimport ProductDetailsPage from './containers/ProductDetailsPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn } from './actions';\nimport Test from './containers/Test';\nimport CartPage from './containers/CartPage';\nimport CheckoutPage from './containers/CheckoutPage';\nimport OrderPage from './containers/OrderPage';\nimport OrderDetailsPage from './containers/OrderDetailsPage';\n\n\nfunction App() {\n\n  const  dispatch = useDispatch();\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    dispatch(isUserLoggedIn());\n  }, [auth.authenticate]);\n\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route path=\"/account/orders\" component={OrderPage} />\n          <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n          <Route\n            path=\"/:productSlug/:productId/p\"\n            component={ProductDetailsPage}\n          />\n          <Route path=\"/:slug\" component={ProductListPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\store\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\Test\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\OrderPage\\index.js",["188","189"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrders } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nimport \"./style.css\";\r\nimport { Breed } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function OrderPage\r\n **/\r\n\r\nconst OrderPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{ maxWidth: \"1160px\", margin: \"5px auto\" }}>\r\n        <Breed\r\n          breed={[\r\n            { name: \"Home\", href: \"/\" },\r\n            { name: \"My Account\", href: \"/account\" },\r\n            { name: \"My Orders\", href: \"/account/orders\" },\r\n          ]}\r\n          breedIcon={<IoIosArrowForward />}\r\n        />\r\n        {user.orders.map((order) => {\r\n          return order.items.map((item) => (\r\n            <Card style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              <Link\r\n                to={`/order_details/${order._id}`}\r\n                className=\"orderItemContainer\"\r\n              >\r\n                <div className=\"orderImgContainer\">\r\n                  <img\r\n                    className=\"orderImg\"\r\n                    src={item.productId.productPictures[0].img}\r\n                  />\r\n                </div>\r\n                <div className=\"orderRow\">\r\n                  <div className=\"orderName\">{item.productId.name}</div>\r\n                  <div className=\"orderPrice\">\r\n                    <BiRupee />\r\n                    {item.payablePrice}\r\n                  </div>\r\n                  <div>{order.paymentStatus}</div>\r\n                </div>\r\n              </Link>\r\n            </Card>\r\n          ));\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\HomePage\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\OrderDetailsPage\\index.js",["190"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrder } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport Price from \"../../components/UI/Price\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function OrderDetails\r\n **/\r\n\r\nconst OrderDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.user.orderDetails);\r\n\r\n  useEffect(() => {\r\n    console.log({ props });\r\n    const payload = {\r\n      orderId: props.match.params.orderId,\r\n    };\r\n    dispatch(getOrder(payload));\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const formatDate2 = (date) => {\r\n    const month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\r\n    }\r\n  };\r\n\r\n  if (!(orderDetails && orderDetails.address)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        style={{\r\n          width: \"1160px\",\r\n          margin: \"10px auto\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n        >\r\n          <div className=\"delAdrContainer\">\r\n            <div className=\"delAdrDetails\">\r\n              <div className=\"delTitle\">Delivery Address</div>\r\n              <div className=\"delName\">{orderDetails.address.name}</div>\r\n              <div className=\"delAddress\">{orderDetails.address.address}</div>\r\n              <div className=\"delPhoneNumber\">\r\n                Phone number {orderDetails.address.mobileNumber}\r\n              </div>\r\n            </div>\r\n            <div className=\"delMoreActionContainer\">\r\n              <div className=\"delTitle\">More Actions</div>\r\n              <div className=\"delName\">Download Invoice</div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {orderDetails.items.map((item, index) => (\r\n          <Card\r\n            style={{ display: \"flex\", padding: \"20px 0\", margin: \"10px 0\" }}\r\n          >\r\n            <div className=\"flexRow\">\r\n              <div className=\"delItemImgContainer\">\r\n                <img src={item.productId.productPictures[0].img} alt=\"\" />\r\n              </div>\r\n              <div style={{ width: \"250px\" }}>\r\n                <div className=\"delItemName\">{item.productId.name}</div>\r\n                <Price value={item.payablePrice} />\r\n              </div>\r\n            </div>\r\n            <div style={{ padding: \"25px 50px\" }}>\r\n              <div className=\"orderTrack\">\r\n                {orderDetails.orderStatus.map((status) => (\r\n                  <div\r\n                    className={`orderStatus ${\r\n                      status.isCompleted ? \"active\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                    ></div>\r\n                    <div className=\"orderInfo\">\r\n                      <div className=\"status\">{status.type}</div>\r\n                      <div className=\"date\">{formatDate(status.date)}</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div style={{ fontWeight: \"500\", fontSize: 14 }}>\r\n              {orderDetails.orderStatus[3].isCompleted &&\r\n                `Delivered on ${formatDate2(orderDetails.orderStatus[3].date)}`}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CartPage\\index.js",["191"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport CartItem from \"./CartItem\";\r\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\n\r\nimport \"./style.css\";\r\nimport { MaterialButton } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function CartPage\r\n **/\r\n\r\n/*\r\nBefore Login\r\nAdd product to cart\r\nsave in localStorage\r\nwhen try to checkout ask for credentials and \r\nif logged in then add products to users cart database from localStorage\r\n*/\r\n\r\nconst CartPage = (props) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const auth = useSelector((state) => state.auth);\r\n  console.log(\"CART\", cart)\r\n  console.log(\"AUTH\", auth)\r\n  // const cartItems = cart.cartItems;\r\n  const [cartItems, setCartItems] = useState(cart.cartItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setCartItems(cart.cartItems);\r\n  }, [cart.cartItems]);\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      dispatch(getCartItems());\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  const onQuantityIncrement = (_id, qty) => {\r\n    //console.log({_id, qty});\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, 1));\r\n  };\r\n\r\n  const onQuantityDecrement = (_id, qty) => {\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, -1));\r\n  };\r\n\r\n  const onRemoveCartItem = (_id) => {\r\n    dispatch(removeCartItem({ productId: _id }));\r\n  };\r\n\r\n  if (props.onlyCartItems) {\r\n    return (\r\n      <>\r\n        {Object.keys(cartItems).map((key, index) => (\r\n          <CartItem\r\n            key={index}\r\n            cartItem={cartItems[key]}\r\n            onQuantityInc={onQuantityIncrement}\r\n            onQuantityDec={onQuantityDecrement}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <Card\r\n          headerLeft={`My Cart`}\r\n          headerRight={<div>Deliver to</div>}\r\n          style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\r\n        >\r\n          {Object.keys(cartItems).map((key, index) => (\r\n            <CartItem\r\n              key={index}\r\n              cartItem={cartItems[key]}\r\n              onQuantityInc={onQuantityIncrement}\r\n              onQuantityDec={onQuantityDecrement}\r\n              onRemoveCartItem={onRemoveCartItem}\r\n            />\r\n          ))}\r\n\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              background: \"#ffffff\",\r\n              justifyContent: \"flex-end\",\r\n              boxShadow: \"0 0 10px 10px #eee\",\r\n              padding: \"10px 0\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"250px\" }}>\r\n              <MaterialButton\r\n                title=\"PLACE ORDER\"\r\n                onClick={() => props.history.push(`/checkout`)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CartPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductDetailsPage\\index.js",["192","193","194","195","196"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, getProductDetailsById } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { AiFillThunderbolt } from \"react-icons/ai\";\r\nimport { MaterialButton } from \"../../components/MaterialUI\";\r\nimport \"./style.css\";\r\n\r\n\r\n/**\r\n * @author\r\n * @function ProductDetailsPage\r\n **/\r\n\r\nconst ProductDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n\r\n  useEffect(() => {\r\n    const { productId } = props.match.params;\r\n    console.log(props);\r\n    const payload = {\r\n      params: {\r\n        productId,\r\n      },\r\n    };\r\n    dispatch(getProductDetailsById(payload));\r\n  }, []);\r\n\r\n  if (Object.keys(product.productDetails).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {/* <div>{product.productDetails.name}</div> */}\r\n      <div className=\"productDescriptionContainer\">\r\n        <div className=\"flexRow\">\r\n          <div className=\"verticalImageStack\">\r\n            {product.productDetails.productPictures.map((thumb, index) => (\r\n              <div className=\"thumbnail\">\r\n                <img src={thumb.img} alt={thumb.img} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"productDescContainer\">\r\n            <div className=\"productDescImgContainer\">\r\n              <img\r\n                src={product.productDetails.productPictures[0].img}\r\n                alt={`${product.productDetails.productPictures[0].img}`}\r\n              />\r\n            </div>\r\n\r\n            {/* action buttons */}\r\n            <div className=\"flexRow\">\r\n              <MaterialButton\r\n                title=\"ADD TO CART\"\r\n                bgColor=\"#ff9f00\"\r\n                textColor=\"#ffffff\"\r\n                style={{\r\n                  marginRight: \"5px\",\r\n                }}\r\n                icon={<IoMdCart />}\r\n                onClick={() => {\r\n                  const { _id, name, price } = product.productDetails;\r\n                  const img = product.productDetails.productPictures[0].img;\r\n                  \r\n                  dispatch(addToCart({ _id, name, price, img}));\r\n                  props.history.push(`/cart`);\r\n                }}\r\n              />\r\n              <MaterialButton\r\n                title=\"BUY NOW\"\r\n                bgColor=\"#fb641b\"\r\n                textColor=\"#ffffff\"\r\n                style={{\r\n                  marginLeft: \"5px\",\r\n                }}\r\n                icon={<AiFillThunderbolt />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {/* home > category > subCategory > productName */}\r\n          <div className=\"breed\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"#\">Home</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Mobiles</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Samsung</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">{product.productDetails.name}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {/* product description */}\r\n          <div className=\"productDetails\">\r\n            <p className=\"productTitle\">{product.productDetails.name}</p>\r\n            <div>\r\n              <span className=\"ratingCount\">\r\n                4.3 <IoIosStar />\r\n              </span>\r\n              <span className=\"ratingNumbersReviews\">\r\n                72,234 Ratings & 8,140 Reviews\r\n              </span>\r\n            </div>\r\n            <div className=\"extraOffer\">\r\n              Extra <BiRupee />\r\n              4500 off{\" \"}\r\n            </div>\r\n            <div className=\"flexRow priceContainer\">\r\n              <span className=\"price\">\r\n                <BiRupee />\r\n                {product.productDetails.price}\r\n              </span>\r\n              <span className=\"discount\" style={{ margin: \"0 10px\" }}>\r\n                22% off\r\n              </span>\r\n              {/* <span>i</span> */}\r\n            </div>\r\n            <div>\r\n              <p\r\n                style={{\r\n                  color: \"#212121\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                Available Offers\r\n              </p>\r\n              <p style={{ display: \"flex\" }}>\r\n                <span\r\n                  style={{\r\n                    width: \"100px\",\r\n                    fontSize: \"12px\",\r\n                    color: \"#878787\",\r\n                    fontWeight: \"600\",\r\n                    marginRight: \"20px\",\r\n                  }}\r\n                >\r\n                  Description\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    color: \"#212121\",\r\n                  }}\r\n                >\r\n                  {product.productDetails.description}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CheckoutPage\\index.js",["197","198"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Anchor,\r\n  MaterialButton,\r\n  MaterialInput,\r\n} from \"../../components/MaterialUI\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport CartPage from \"../CartPage\";\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function CheckoutPage\r\n **/\r\n\r\nconst CheckoutStep = (props) => {\r\n  return (\r\n    <div className=\"checkoutStep\">\r\n      <div\r\n        onClick={props.onClick}\r\n        className={`checkoutHeader ${props.active && \"active\"}`}\r\n      >\r\n        <div>\r\n          <span className=\"stepNumber\">{props.stepNumber}</span>\r\n          <span className=\"stepTitle\">{props.title}</span>\r\n        </div>\r\n      </div>\r\n      {props.body && props.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = ({\r\n  adr,\r\n  selectAddress,\r\n  enableAddressEditForm,\r\n  confirmDeliveryAddress,\r\n  onAddressSubmit,\r\n}) => {\r\n  return (\r\n    <div className=\"flexRow addressContainer\">\r\n      <div>\r\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n      </div>\r\n      <div className=\"flexRow sb addressinfo\">\r\n        {!adr.edit ? (\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"addressDetail\">\r\n              <div>\r\n                <span className=\"addressName\">{adr.name}</span>\r\n                <span className=\"addressType\">{adr.addressType}</span>\r\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n              </div>\r\n              {adr.selected && (\r\n                <Anchor\r\n                  name=\"EDIT\"\r\n                  onClick={() => enableAddressEditForm(adr)}\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    color: \"#2874f0\",\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"fullAddress\">\r\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\r\n            </div>\r\n            {adr.selected && (\r\n              <MaterialButton\r\n                title=\"DELIVERY HERE\"\r\n                onClick={() => confirmDeliveryAddress(adr)}\r\n                style={{\r\n                  width: \"200px\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <AddressForm\r\n            withoutLayout={true}\r\n            onSubmitForm={onAddressSubmit}\r\n            initialData={adr}\r\n            onCancel={() => {}}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [newAddress, setNewAddress] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  const [confirmAddress, setConfirmAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [orderSummary, setOrderSummary] = useState(false);\r\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n  const [paymentOption, setPaymentOption] = useState(false);\r\n  const [confirmOrder, setConfirmOrder] = useState(false);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddressSubmit = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const selectAddress = (addr) => {\r\n    //console.log(addr);\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id\r\n        ? { ...adr, selected: true }\r\n        : { ...adr, selected: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const confirmDeliveryAddress = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const enableAddressEditForm = (addr) => {\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const userOrderConfirmation = () => {\r\n    setOrderConfirmation(true);\r\n    setOrderSummary(false);\r\n    setPaymentOption(true);\r\n  };\r\n\r\n  const onConfirmOrder = () => {\r\n    const totalAmount = Object.keys(cart.cartItems).reduce(\r\n      (totalPrice, key) => {\r\n        const { price, qty } = cart.cartItems[key];\r\n        return totalPrice + price * qty;\r\n      },\r\n      0\r\n    );\r\n    const items = Object.keys(cart.cartItems).map((key) => ({\r\n      productId: key,\r\n      payablePrice: cart.cartItems[key].price,\r\n      purchasedQty: cart.cartItems[key].qty,\r\n    }));\r\n    const payload = {\r\n      addressId: selectedAddress._id,\r\n      totalAmount,\r\n      items,\r\n      paymentStatus: \"pending\",\r\n      paymentType: \"cod\",\r\n    };\r\n\r\n    console.log(payload);\r\n    dispatch(addOrder(payload));\r\n    setConfirmOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.authenticate && dispatch(getAddress());\r\n    auth.authenticate && dispatch(getCartItems());\r\n  }, [auth.authenticate]);\r\n\r\n  useEffect(() => {\r\n    const address = user.address.map((adr) => ({\r\n      ...adr,\r\n      selected: false,\r\n      edit: false,\r\n    }));\r\n    setAddress(address);\r\n    //user.address.length === 0 && setNewAddress(true);\r\n  }, [user.address]);\r\n\r\n  useEffect(() => {\r\n    if (confirmOrder && user.placedOrderId) {\r\n      props.history.push(`/order_details/${user.placedOrderId}`);\r\n    }\r\n  }, [user.placedOrderId]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <div className=\"checkoutContainer\">\r\n          {/* check if user logged in or not */}\r\n          <CheckoutStep\r\n            stepNumber={\"1\"}\r\n            title={\"LOGIN\"}\r\n            active={!auth.authenticate}\r\n            body={\r\n              auth.authenticate ? (\r\n                <div className=\"loggedInId\">\r\n                  <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\r\n                  <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <MaterialInput label=\"Email\" />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n          <CheckoutStep\r\n            stepNumber={\"2\"}\r\n            title={\"DELIVERY ADDRESS\"}\r\n            active={!confirmAddress && auth.authenticate}\r\n            body={\r\n              <>\r\n                {confirmAddress ? (\r\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\r\n                ) : (\r\n                  address.map((adr) => (\r\n                    <Address\r\n                      selectAddress={selectAddress}\r\n                      enableAddressEditForm={enableAddressEditForm}\r\n                      confirmDeliveryAddress={confirmDeliveryAddress}\r\n                      onAddressSubmit={onAddressSubmit}\r\n                      adr={adr}\r\n                    />\r\n                  ))\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n\r\n          {/* AddressForm */}\r\n          {confirmAddress ? null : newAddress ? (\r\n            <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\r\n          ) : auth.authenticate ? (\r\n            <CheckoutStep\r\n              stepNumber={\"+\"}\r\n              title={\"ADD NEW ADDRESS\"}\r\n              active={false}\r\n              onClick={() => setNewAddress(true)}\r\n            />\r\n          ) : null}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"3\"}\r\n            title={\"ORDER SUMMARY\"}\r\n            active={orderSummary}\r\n            body={\r\n              orderSummary ? (\r\n                <CartPage onlyCartItems={true} />\r\n              ) : orderConfirmation ? (\r\n                <div className=\"stepCompleted\">\r\n                  {Object.keys(cart.cartItems).length} items\r\n                </div>\r\n              ) : null\r\n            }\r\n          />\r\n\r\n          {orderSummary && (\r\n            <Card\r\n              style={{\r\n                margin: \"10px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flexRow sb\"\r\n                style={{\r\n                  padding: \"20px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Order confirmation email will be sent to{\" \"}\r\n                  <strong>{auth.user.email}</strong>\r\n                </p>\r\n                <MaterialButton\r\n                  title=\"CONTINUE\"\r\n                  onClick={userOrderConfirmation}\r\n                  style={{\r\n                    width: \"200px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </Card>\r\n          )}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"4\"}\r\n            title={\"PAYMENT OPTIONS\"}\r\n            active={paymentOption}\r\n            body={\r\n              paymentOption && (\r\n                <div>\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      padding: \"20px\",\r\n                    }}\r\n                  >\r\n                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\r\n                    <div>Cash on delivery</div>\r\n                  </div>\r\n                  <MaterialButton\r\n                    title=\"CONFIRM ORDER\"\r\n                    onClick={onConfirmOrder}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      margin: \"0 0 20px 20px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Price Component */}\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\category.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\product.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\auth.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\user.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\cart.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Price.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CheckoutPage\\AddressForm.js",["199","200"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAddress } from \"../../actions\";\r\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function AddressForm\r\n **/\r\n\r\nconst AddressForm = (props) => {\r\n  const { initialData } = props;\r\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\r\n    initialData ? initialData.mobileNumber : \"\"\r\n  );\r\n  const [pinCode, setPinCode] = useState(\r\n    initialData ? initialData.pinCode : \"\"\r\n  );\r\n  const [locality, setLocality] = useState(\r\n    initialData ? initialData.locality : \"\"\r\n  );\r\n  const [address, setAddress] = useState(\r\n    initialData ? initialData.address : \"\"\r\n  );\r\n  const [cityDistrictTown, setCityDistrictTown] = useState(\r\n    initialData ? initialData.cityDistrictTown : \"\"\r\n  );\r\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\r\n  const [landmark, setLandmark] = useState(\r\n    initialData ? initialData.landmark : \"\"\r\n  );\r\n  const [alternatePhone, setAlternatePhone] = useState(\r\n    initialData ? initialData.alternatePhone : \"\"\r\n  );\r\n  const [addressType, setAddressType] = useState(\r\n    initialData ? initialData.addressType : \"\"\r\n  );\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [submitFlag, setSubmitFlag] = useState(false);\r\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\r\n\r\n  const inputContainer = {\r\n    width: \"100%\",\r\n    marginRight: 10,\r\n  };\r\n\r\n  const onAddressSubmit = (e) => {\r\n    const payload = {\r\n      address: {\r\n        name,\r\n        mobileNumber,\r\n        pinCode,\r\n        locality,\r\n        address,\r\n        cityDistrictTown,\r\n        state,\r\n        landmark,\r\n        alternatePhone,\r\n        addressType,\r\n      },\r\n    };\r\n    console.log(payload);\r\n    if (id) {\r\n      payload.address._id = id;\r\n    }\r\n    dispatch(addAddress(payload));\r\n    setSubmitFlag(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"addressCount\", user.address);\r\n    if (submitFlag) {\r\n      console.log(\"where are we\", user);\r\n      let _address = {};\r\n      if (id) {\r\n        _address = {\r\n          _id: id,\r\n          name,\r\n          mobileNumber,\r\n          pinCode,\r\n          locality,\r\n          address,\r\n          cityDistrictTown,\r\n          state,\r\n          landmark,\r\n          alternatePhone,\r\n          addressType,\r\n        };\r\n      } else {\r\n        _address = user.address.slice(user.address.length - 1)[0];\r\n      }\r\n\r\n      props.onSubmitForm(_address);\r\n    }\r\n  }, [user.address]);\r\n\r\n  const renderAddressForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"10-digit mobile number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Pincode\"\r\n              value={pinCode}\r\n              onChange={(e) => setPinCode(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Locality\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"City/District/Town\"\r\n              value={cityDistrictTown}\r\n              onChange={(e) => setCityDistrictTown(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"State\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Landmark (Optional)\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Alternate Phone (Optional)\"\r\n              value={alternatePhone}\r\n              onChange={(e) => setAlternatePhone(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Address Type</label>\r\n          <div className=\"flexRow\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"home\")}\r\n                name=\"addressType\"\r\n                value=\"home\"\r\n              />\r\n              <span>Home</span>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"work\")}\r\n                name=\"addressType\"\r\n                value=\"work\"\r\n              />\r\n              <span>Work</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <MaterialButton\r\n            title=\"SAVE AND DELIVER HERE\"\r\n            onClick={onAddressSubmit}\r\n            style={{\r\n              width: \"250px\",\r\n              margin: \"20px 0\",\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (props.withoutLayout) {\r\n    return <div>{renderAddressForm()}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\r\n      <div className={`checkoutHeader`}>\r\n        <div>\r\n          <span className=\"stepNumber\">+</span>\r\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"0 60px\",\r\n          paddingBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        {renderAddressForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\utils\\getParams.js",["201"],"export default (query) =>{\r\n    // \"?cid=5ff2a3dccc4d1f0ad0288881&type=store\"\r\n    if(query){\r\n        const queryString = query.split(\"?\")[1];\r\n        if(queryString.length > 0){\r\n            const params = queryString.split(\"&\");\r\n            const paramsObj = {};\r\n            params.forEach(param =>{\r\n                const keyValue = param.split(\"=\");\r\n                paramsObj[keyValue[0]]= keyValue[1];\r\n            });\r\n            return paramsObj\r\n        }\r\n    }\r\n    return {}\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\category.reducers.js",["202","203","204"],"import { categoryConstants } from \"../actions/constants\";\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\nexport const categoryReducers = (state = initState, action) => {\r\n  const buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n    if (parentId == undefined) {\r\n      return [\r\n        ...categories,\r\n        {\r\n          _id: category._id,\r\n          name: category.name,\r\n          slug: category.slug,\r\n          children: [],\r\n        },\r\n      ];\r\n    }\r\n    for (let cat of categories) {\r\n      if (cat._id == parentId) {\r\n        myCategories.push({\r\n          ...cat,\r\n          children:\r\n            cat.children \r\n              ? buildNewCategories(\r\n                  parentId,\r\n                  [\r\n                    ...cat.children,\r\n                    {\r\n                      _id: category._id,\r\n                      name: category.name,\r\n                      slug: category.slug,\r\n                      parentId: category.parentId,\r\n                      children: category.children,\r\n                    },\r\n                  ],\r\n                  category\r\n                )\r\n              : [],\r\n        });\r\n      } else {\r\n        myCategories.push({\r\n          ...cat,\r\n          children:\r\n            cat.children\r\n              ? buildNewCategories(parentId, cat.children, category)\r\n              : [],\r\n        });\r\n      }\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  switch (action.type) {\r\n    case categoryConstants.GET_ALL_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case categoryConstants.GET_ALL_CATEGORY_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n      const category = action.payload.category;\r\n      const updatedCategories = buildNewCategories(\r\n        category.parentId,\r\n        state.categories,\r\n        category\r\n      );\r\n      console.log(updatedCategories);\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\product.reducers.js",["205"],"import { productConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  products: [],\r\n  productsByPrice: {\r\n    under5k: [],\r\n    under10k: [],\r\n    under15k: [],\r\n    under20k: [],\r\n    under30k: [],\r\n  },\r\n  pageRequest: false,\r\n  page: {},\r\n  error:null,\r\n  productDetails: {},\r\n  loading:false\r\n};\r\n\r\nexport const productReducers = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case productConstants.GET_ALL_PRODUCT_BY_SLUG_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        products: action.payload.products,\r\n        productsByPrice: {\r\n          ...action.payload.productsByPrice,\r\n        },\r\n      };\r\n      break;\r\n    case productConstants.GET_ALL_PRODUCT_BY_SLUG_REQUEST:\r\n      state = {\r\n        ...state,\r\n        pageRequest:true\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_PAGE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        pageRequest:false,\r\n        page:action.payload.page\r\n        \r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_PAGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error:action.payload.error\r\n      };\r\n      break;\r\n      case productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\r\n        state = {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n        break;\r\n      case productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          productDetails: action.payload.productDetails,\r\n        };\r\n        break;\r\n      case productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload.error,\r\n        };\r\n        break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\cart.reducers.js",["206"],"import { cartConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    cartItems: {\r\n        // 123: {\r\n        //     _id: 123,\r\n        //     name: 'Samsung mobile',\r\n        //     img: 'some.jpg',\r\n        //     price: 200,\r\n        //     qty: 1,\r\n        // }\r\n    },\r\n    updatingCart: false,\r\n    error: null\r\n};\r\n\r\nexport const cartReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case cartConstants.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_FAILURE:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case cartConstants.RESET_CART:\r\n            state = {\r\n                ...initState\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\user.reducers.js",["207"],"import { userConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  address: [],\r\n  orders: [],\r\n  orderDetails: {},\r\n  error: null,\r\n  loading: false,\r\n  orderFetching: false,\r\n  placedOrderId: null,\r\n};\r\n\r\nexport const userReducers= (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userConstants.GET_USER_ADDRESS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        address: action.payload.address,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        address: action.payload.address,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        orderFetching: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_REQUEST:\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orderDetails: action.payload.order,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_FAILURE:\r\n      break;\r\n    case userConstants.ADD_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        placedOrderId: action.payload.order._id,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\reducers\\auth.reducers.js",["208"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    token:null,\r\n    user:{\r\n        firstName : '',\r\n        lastName: '',\r\n        email:'',\r\n        fullName:''\r\n    },\r\n    authenticate:false,\r\n    authenticating:false,\r\n    message:null,\r\n    loading:'',\r\n    error:''\r\n}\r\n\r\nexport const authReducers= (state=initState , action)=>{\r\n    console.log(\"ACTION\",action);\r\n    switch(action.type){\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n        break;\r\n\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state={\r\n                ...state,\r\n                token: action.payload.token,\r\n                user:action.payload.user,\r\n                message:action.payload.message,\r\n                authenticate:true,\r\n                authenticating:false\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_FAILURE:\r\n            state={\r\n                ...state,\r\n                authenticate:false,\r\n                authenticating:false,\r\n                message:action.payload.message\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n            state={\r\n                ...initState\r\n            }\r\n            break;\r\n        // case authConstants.LOGOUT_FAILURE:\r\n        //     state={\r\n        //         ...state,\r\n        //         error:action.payload.error\r\n        //     }\r\n        //     break;\r\n        \r\n\r\n    }\r\n    return state;\r\n}\r\n\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\Layout\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js",["209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductBySlug } from \"../../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function ProductStore\r\n **/\r\n\r\nconst ProductStore = (props) => {\r\n  const [priceRange, setPriceRange] = useState({\r\n    under5k: 5000,\r\n    under10k: 10000,\r\n    under15k: 15000,\r\n    under20k: 20000,\r\n    under30k: 25000,\r\n  });\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  console.log(product);\r\n  useEffect(() => {\r\n    console.log(props);\r\n    const { match } = props;\r\n    dispatch(getProductBySlug(match.params.slug));\r\n  }, []);\r\n  return (\r\n    <>\r\n      {Object.keys(product.productsByPrice).map((key, index) => {\r\n        return (\r\n          <div className=\"card\">\r\n            <div className=\"cardHeader\">\r\n              <div>\r\n               \r\n                {props.match.params.slug} Mobile under {priceRange[key]}\r\n              </div>\r\n              <button>View All</button>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {product.productsByPrice[key].map((product) => (\r\n                <Link to={`${product.slug}/${product._id}/p`} style={{display:\"block\"}} className=\"productContainer\">\r\n                  <div className=\"productImgContainer\">\r\n                    <img src={product.productPictures[0].img} alt=\"\" />\r\n                  </div>\r\n                  <div className=\"productInfo\">\r\n                    <div className=\"productTitle\">{product.name}</div>\r\n                    <div>\r\n                      <span>4.3</span>&nbsp;\r\n                      <span>5535</span>\r\n                    </div>\r\n                    <div className=\"productPrice\">{product.price}</div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductStore;\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js",["211","212"],"import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductPage } from \"../../../actions\";\r\nimport getParams from \"../../../utils/getParams\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Card from \"../../../components/UI/Card\";\r\n\r\n\r\n/**\r\n * @author\r\n * @function ProductPage\r\n **/\r\n\r\nconst ProductPage = (props) => {\r\n  const params = getParams(props.location.search);\r\n  const payload = {\r\n    params,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const {page} = product;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductPage(payload));\r\n  }, []);\r\n  return <>\r\n  \r\n  <div style={{margin:\"0 10px\"}}>\r\n  <h3>{page.title}</h3>\r\n  <Carousel\r\n  renderThumbs={()=>{}}\r\n  >\r\n  {\r\n    page.banners && page.banners.map((banner, index) =>\r\n    \r\n    <a href={banner.navigateTo} key={index} style={{display:\"block\"}}>\r\n        <img src={banner.img} />\r\n    </a>\r\n    \r\n\r\n    )\r\n  }\r\n  </Carousel>\r\n  <div style={{display:\"flex\",justifyContent:\"center\",flexWrap:\"wrap\",margin:\"10px 0\"}}>\r\n    {page.products && page.products.map((product, index) => \r\n    \r\n      <Card key={index} style={{width:\"400px\",height:\"201px\", margin:\"5px\"}}>\r\n      <img style={{width:\"100%\", height:\"100%\"}} src={product.img} alt=\"\"/>\r\n      </Card>\r\n      \r\n    \r\n    )}\r\n  </div>\r\n  </div>\r\n  \r\n  </>;\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Card\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\MaterialUI\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\PriceDetails\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\actions\\constants.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\CartPage\\CartItem\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\helpers\\axios.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\urlConfig.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\MenuHeader\\index.js",["213"],"import React, { useEffect } from 'react';\r\nimport { getAllCategory } from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function MenuHeader\r\n**/\r\n\r\nconst MenuHeader = (props) => {\r\n    const dispatch = useDispatch();\r\n    const category = useSelector(state => state.category);\r\n    console.log(category)\r\n    \r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            \r\n            myCategories.push(\r\n                <li key={category.name}>\r\n                    {category.parentId ? \r\n                    <a href={`/${category.slug}?cid=${category._id}&type=${category.type}`}>{category.name}</a>\r\n                    : <span>{category.name}</span>\r\n                    }\r\n                    {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\r\n                </li>\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCategory());\r\n    }, []);\r\n    return (\r\n        <div className=\"menuHeader\">\r\n            <ul>\r\n                \r\n                { category.categories.length > 0 ? renderCategories(category.categories) : null }\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MenuHeader","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\Header\\index.js",["214","215","216","217","218","219","220","221","222"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport flipkartLogo from \"../../images/logo/flipkart.png\";\r\nimport goldenStar from \"../../images/logo/golden-star.png\";\r\nimport { IoIosArrowDown, IoIosCart, IoIosSearch } from \"react-icons/io\";\r\nimport {\r\n  Modal,\r\n  MaterialInput,\r\n  MaterialButton,\r\n  DropdownMenu,\r\n} from \"../MaterialUI\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, signout, getCartItems, signup as _signup } from \"../../actions\";\r\nimport Cart from \"../UI/Cart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  const [loginModal, setLoginModal] = useState(false);\r\n  const [signup, setSignup] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // state cart value\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const userSignup = () => {\r\n    const user = { firstName, lastName, email, password };\r\n    if (\r\n      firstName === \"\" ||\r\n      lastName === \"\" ||\r\n      email === \"\" ||\r\n      password === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    dispatch(_signup(user));\r\n  };\r\n\r\n  const userLogin = () => {\r\n    if (signup) {\r\n      userSignup();\r\n    } else {\r\n      dispatch(login({ email, password }));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      setLoginModal(false);\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getCartItems());\r\n  // }, []);\r\n\r\n  const renderLoggedInMenu = () => {\r\n    return (\r\n      <DropdownMenu\r\n        menu={<a className=\"fullName\">{auth.user.fullName}</a>}\r\n        menus={[\r\n          { label: \"My Profile\", href: \"\", icon: null },\r\n          { label: \"SuperCoin Zone\", href: \"\", icon: null },\r\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\r\n          {\r\n            label: \"Orders\",\r\n            href: `/account/orders`,\r\n            icon: null,\r\n          },\r\n          { label: \"Wishlist\", href: \"\", icon: null },\r\n          { label: \"My Chats\", href: \"\", icon: null },\r\n          { label: \"Coupons\", href: \"\", icon: null },\r\n          { label: \"Rewards\", href: \"\", icon: null },\r\n          { label: \"Notifications\", href: \"\", icon: null },\r\n          { label: \"Gift Cards\", href: \"\", icon: null },\r\n          { label: \"Logout\", href: \"\", icon: null, onClick: logout },\r\n        ]}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInMenu = () => {\r\n    return (\r\n      <DropdownMenu\r\n        menu={\r\n          <a\r\n            className=\"loginButton\"\r\n            onClick={() => {\r\n              setSignup(false);\r\n              setLoginModal(true);\r\n            }}\r\n          >\r\n            Login\r\n          </a>\r\n        }\r\n        menus={[\r\n          { label: \"My Profile\", href: \"\", icon: null },\r\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\r\n          {\r\n            label: \"Orders\",\r\n            href: `/account/orders`,\r\n            icon: null,\r\n            onClick: () => {\r\n              !auth.authenticate && setLoginModal(true);\r\n            },\r\n          },\r\n          { label: \"Wishlist\", href: \"\", icon: null },\r\n          { label: \"Rewards\", href: \"\", icon: null },\r\n          { label: \"Gift Cards\", href: \"\", icon: null },\r\n        ]}\r\n        firstMenu={\r\n          <div className=\"firstmenu\">\r\n            <span>New Customer?</span>\r\n            <a\r\n              onClick={() => {\r\n                setLoginModal(true);\r\n                setSignup(true);\r\n              }}\r\n              style={{ color: \"#2874f0\" }}\r\n            >\r\n              Sign Up\r\n            </a>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Modal visible={loginModal} onClose={() => setLoginModal(false)}>\r\n        <div className=\"authContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"leftspace\">\r\n              <h2>Login</h2>\r\n              <p>Get access to your Orders, Wishlist and Recommendations</p>\r\n            </div>\r\n            <div className=\"rightspace\">\r\n              <div className=\"loginInputContainer\">\r\n                {auth.error && (\r\n                  <div style={{ color: \"red\", fontSize: 12 }}>{auth.error}</div>\r\n                )}\r\n                {signup && (\r\n                  <MaterialInput\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                )}\r\n                {signup && (\r\n                  <MaterialInput\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                )}\r\n\r\n                <MaterialInput\r\n                  type=\"text\"\r\n                  label=\"Email/Mobile Number\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <MaterialInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  // rightElement={<a href=\"#\">Forgot?</a>}\r\n                />\r\n                <MaterialButton\r\n                  title={signup ? \"Register\" : \"Login\"}\r\n                  bgColor=\"#fb641b\"\r\n                  textColor=\"#ffffff\"\r\n                  style={{\r\n                    margin: \"40px 0 20px 0\",\r\n                  }}\r\n                  onClick={userLogin}\r\n                />\r\n                <p style={{ textAlign: \"center\" }}>OR</p>\r\n                <MaterialButton\r\n                  title=\"Request OTP\"\r\n                  bgColor=\"#ffffff\"\r\n                  textColor=\"#2874f0\"\r\n                  style={{\r\n                    margin: \"20px 0\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"subHeader\">\r\n        {/* Logo  */}\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">\r\n          <img src={flipkartLogo} className=\"logoimage\" alt=\"\" />\r\n          </Link>\r\n            \r\n          \r\n          <a style={{ marginTop: \"-10px\" }}>\r\n            <span className=\"exploreText\">Explore</span>\r\n            <span className=\"plusText\">Plus</span>\r\n            <img src={goldenStar} className=\"goldenStar\" alt=\"\" />\r\n          </a>\r\n        </div>\r\n        {/* logo ends here */}\r\n\r\n        {/* search component */}\r\n        <div\r\n          style={{\r\n            padding: \"0 10px\",\r\n          }}\r\n        >\r\n          <div className=\"searchInputContainer\">\r\n            <input\r\n              className=\"searchInput\"\r\n              placeholder={\"search for products, brands and more\"}\r\n            />\r\n            <div className=\"searchIconContainer\">\r\n              <IoIosSearch\r\n                style={{\r\n                  color: \"#2874f0\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* search component ends here */}\r\n\r\n        {/* right side menu */}\r\n        <div className=\"rightMenu\">\r\n          {auth.authenticate ? renderLoggedInMenu() : renderNonLoggedInMenu()}\r\n          <DropdownMenu\r\n            menu={\r\n              <a className=\"more\">\r\n                <span>More</span>\r\n                <IoIosArrowDown />\r\n              </a>\r\n            }\r\n            menus={[\r\n              { label: \"Notification Preference\", href: \"\", icon: null },\r\n              { label: \"Sell on flipkart\", href: \"\", icon: null },\r\n              { label: \"24x7 Customer Care\", href: \"\", icon: null },\r\n              { label: \"Advertise\", href: \"\", icon: null },\r\n              { label: \"Download App\", href: \"\", icon: null },\r\n            ]}\r\n          />\r\n          <div>\r\n            <a href={`/cart`} className=\"cart\">\r\n              <Cart count={Object.keys(cart.cartItems).length} />\r\n              <span style={{ margin: \"0 10px\" }}>Cart</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* right side menu ends here */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\components\\UI\\Cart.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-clone\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":9,"column":8,"nodeType":"231","messageId":"232","endLine":9,"endColumn":12},{"ruleId":"233","severity":1,"message":"234","line":23,"column":6,"nodeType":"235","endLine":23,"endColumn":25,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"234","line":24,"column":6,"nodeType":"235","endLine":24,"endColumn":8,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":47,"column":19,"nodeType":"240","endLine":50,"endColumn":21},{"ruleId":"233","severity":1,"message":"241","line":25,"column":6,"nodeType":"235","endLine":25,"endColumn":8,"suggestions":"242"},{"ruleId":"233","severity":1,"message":"234","line":42,"column":6,"nodeType":"235","endLine":42,"endColumn":25,"suggestions":"243"},{"ruleId":"233","severity":1,"message":"241","line":30,"column":6,"nodeType":"235","endLine":30,"endColumn":8,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":91,"column":17,"nodeType":"240","endLine":91,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":95,"column":17,"nodeType":"240","endLine":95,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":99,"column":17,"nodeType":"240","endLine":99,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":103,"column":17,"nodeType":"240","endLine":103,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":176,"column":6,"nodeType":"235","endLine":176,"endColumn":25,"suggestions":"247"},{"ruleId":"233","severity":1,"message":"248","line":192,"column":6,"nodeType":"235","endLine":192,"endColumn":26,"suggestions":"249"},{"ruleId":"229","severity":1,"message":"250","line":42,"column":14,"nodeType":"231","messageId":"232","endLine":42,"endColumn":19},{"ruleId":"233","severity":1,"message":"251","line":97,"column":6,"nodeType":"235","endLine":97,"endColumn":20,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":1,"nodeType":"255","endLine":16,"endColumn":2},{"ruleId":"256","severity":1,"message":"257","line":10,"column":18,"nodeType":"258","messageId":"259","endLine":10,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":22,"column":19,"nodeType":"258","messageId":"259","endLine":22,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":56,"column":3,"nodeType":"262","messageId":"263","endLine":103,"endColumn":4},{"ruleId":"260","severity":1,"message":"261","line":20,"column":3,"nodeType":"262","messageId":"263","endLine":70,"endColumn":4},{"ruleId":"260","severity":1,"message":"261","line":18,"column":5,"nodeType":"262","messageId":"263","endLine":43,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":14,"column":3,"nodeType":"262","messageId":"263","endLine":91,"endColumn":4},{"ruleId":"260","severity":1,"message":"261","line":20,"column":5,"nodeType":"262","messageId":"263","endLine":65,"endColumn":6},{"ruleId":"229","severity":1,"message":"264","line":13,"column":22,"nodeType":"231","messageId":"232","endLine":13,"endColumn":35},{"ruleId":"233","severity":1,"message":"241","line":27,"column":6,"nodeType":"235","endLine":27,"endColumn":8,"suggestions":"265"},{"ruleId":"233","severity":1,"message":"266","line":29,"column":6,"nodeType":"235","endLine":29,"endColumn":8,"suggestions":"267"},{"ruleId":"238","severity":1,"message":"239","line":41,"column":9,"nodeType":"240","endLine":41,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":36,"column":8,"nodeType":"235","endLine":36,"endColumn":10,"suggestions":"268"},{"ruleId":"229","severity":1,"message":"269","line":5,"column":26,"nodeType":"231","messageId":"232","endLine":5,"endColumn":35},{"ruleId":"229","severity":1,"message":"270","line":13,"column":26,"nodeType":"231","messageId":"232","endLine":13,"endColumn":38},{"ruleId":"229","severity":1,"message":"271","line":29,"column":10,"nodeType":"231","messageId":"232","endLine":29,"endColumn":15},{"ruleId":"229","severity":1,"message":"272","line":29,"column":17,"nodeType":"231","messageId":"232","endLine":29,"endColumn":25},{"ruleId":"245","severity":1,"message":"273","line":75,"column":15,"nodeType":"240","endLine":75,"endColumn":39},{"ruleId":"245","severity":1,"message":"273","line":101,"column":11,"nodeType":"240","endLine":107,"endColumn":12},{"ruleId":"245","severity":1,"message":"273","line":129,"column":13,"nodeType":"240","endLine":135,"endColumn":14},{"ruleId":"245","severity":1,"message":"273","line":219,"column":11,"nodeType":"240","endLine":219,"endColumn":45},{"ruleId":"245","severity":1,"message":"273","line":254,"column":15,"nodeType":"240","endLine":254,"endColumn":35},{"ruleId":"233","severity":1,"message":"241","line":22,"column":6,"nodeType":"235","endLine":22,"endColumn":8,"suggestions":"274"},{"ruleId":"238","severity":1,"message":"239","line":39,"column":15,"nodeType":"240","endLine":39,"endColumn":59},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["277"],["278"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["279"],["280"],["281"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["282"],"React Hook useEffect has missing dependencies: 'confirmOrder' and 'props.history'. Either include them or remove the dependency array.",["283"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', 'submitFlag', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["284"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setPriceRange' is assigned a value but never used.",["285"],"React Hook useEffect has missing dependencies: 'dispatch' and 'payload'. Either include them or remove the dependency array.",["286"],["287"],"'IoIosCart' is defined but never used.","'getCartItems' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"289","fix":"295"},{"desc":"293","fix":"296"},{"desc":"289","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"293","fix":"302"},{"desc":"303","fix":"304"},{"desc":"291","fix":"305"},{"desc":"293","fix":"306"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch]",{"range":"309","text":"310"},"Update the dependencies array to be: [dispatch, props]",{"range":"311","text":"312"},{"range":"313","text":"308"},{"range":"314","text":"312"},{"range":"315","text":"308"},"Update the dependencies array to be: [confirmOrder, props.history, user.placedOrderId]",{"range":"316","text":"317"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",{"range":"318","text":"319"},{"range":"320","text":"312"},"Update the dependencies array to be: [dispatch, payload]",{"range":"321","text":"322"},{"range":"323","text":"310"},{"range":"324","text":"312"},[814,833],"[auth.authenticate, dispatch]",[680,682],"[dispatch]",[676,678],"[dispatch, props]",[1209,1228],[891,893],[5233,5252],[5653,5673],"[confirmOrder, props.history, user.placedOrderId]",[2668,2682],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",[734,736],[789,791],"[dispatch, payload]",[1095,1097],[625,627]]